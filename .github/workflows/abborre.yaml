name: "Abborre"

on:
  push:

jobs:
  gofmt:
    name: "go fmt"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-go@v4"
        with:
          go-version-file: "./go.mod"

      - run: "test -z $(gofmt -l .)"

  govet:
    name: "go vet"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-go@v4"
        with:
          go-version-file: "./go.mod"

      - run: "go vet ./..."

  gotest:
    name: "go test"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-go@v4"
        with:
          go-version-file: "./go.mod"

      - run: "go test ./..."

  tffmt:
    name: "tf fmt"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v2"
      - uses: "hashicorp/setup-terraform@v2"

      - run: "terraform fmt -check -diff -recursive"

  tfvalidate:
    name: "tf validate"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v2"
      - uses: "hashicorp/setup-terraform@v2"

      - run: "terraform init -backend=false"
        working-directory: "./infra"
      - run: "touch abborre-lambda.zip"
      - run: "terraform validate"
        working-directory: "./infra"

  deploy:
    needs: ["gofmt", "govet", "gotest", "tffmt", "tfvalidate"]
    if: "${{ github.ref == 'refs/heads/main' }}"
    name: "deploy ${{ matrix.env }}"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        env: ["test", "prod"]
    steps:
      - uses: "actions/checkout@v2"
      - uses: "aws-actions/configure-aws-credentials@v1-node16"
        with:
          aws-region: "eu-north-1"
          role-to-assume: "arn:aws:iam::865405253382:role/GitHub-Actions"
          role-session-name: "GitHubActions-${{ matrix.env }}-deploy"

      - run: "./deploy.sh ${{ matrix.env }}"
